/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CAPS>;
            key-positions = <24 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W     &kp F     &kp P  &kp B                                   &kp J  &kp L   &kp U      &kp Y    &kp SEMI  &kp DEL
&kp BSPC   &kp A  &kp R     &kp S     &kp T  &kp G                                   &kp M  &kp N   &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C     &kp D  &kp V                                   &kp K  &kp H   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                  &kp LGUI  &kp LALT  &mo 1  &mt LEFT_CONTROL SPACE  &lt 3 KP_ENTER  &mo 2  &trans  &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp ESC  &kp F9  &kp F10  &kp F11  &kp F12  &trans          &trans  &kp N7   &kp N8  &kp N9  &trans  &trans
&trans   &kp F5  &kp F6   &kp F7   &kp F8   &kp DEL         &trans  &kp N5   &kp N6  &kp N6  &trans  &trans
&trans   &kp F1  &kp F2   &kp F3   &kp F4   &trans          &trans  &kp N1   &kp N2  &kp N3  &trans  &trans
                 &trans   &trans   &trans   &none    &none  &kp N0  &kp DEL  &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp LBKT      &kp RBKT      &kp MINUS  &kp SEMI    &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL  &kp LS(GT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp LS(LBRC)  &kp LS(RBRC)  &kp DOT    &kp BSLH    &kp DOWN
                &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans            &trans        &kp PG_UP  &kp UP    &kp PG_DN  &trans         &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans            &kp LC(LEFT)  &kp LEFT   &kp DOWN  &kp RIGHT  &kp LC(RIGHT)  &trans
&trans  &trans  &trans          &trans          &trans           &trans            &trans        &kp HOME   &kp INS   &kp END    &trans         &trans
                &trans          &mkp MB3        &mkp MB2         &mkp MB1  &trans  &trans        &trans     &trans
            >;
        };
    };
};
